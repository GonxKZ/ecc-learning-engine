@echo off
REM Windows Cross-Platform Testing Script
REM Generated by CMake - do not edit manually

setlocal enabledelayedexpansion

echo ========================================
echo ECScope Windows Cross-Platform Testing
echo ========================================

REM Check for required tools
where cmake >nul 2>&1
if errorlevel 1 (
    echo Error: CMake not found in PATH
    exit /b 1
)

where msbuild >nul 2>&1
if errorlevel 1 (
    echo Error: MSBuild not found in PATH
    echo Please run from Visual Studio Developer Command Prompt
    exit /b 1
)

REM Set variables
set SOURCE_DIR=/mnt/c/Users/Gonzalo/Documents/4to curso/herramientas/entities-cpp2
set BUILD_DIR=%SOURCE_DIR%\build_windows_test
set CMAKE_BUILD_TYPE=Debug

echo Source Directory: %SOURCE_DIR%
echo Build Directory: %BUILD_DIR%
echo Build Type: %CMAKE_BUILD_TYPE%
echo.

REM Clean previous build
if exist "%BUILD_DIR%" (
    echo Cleaning previous build...
    rmdir /s /q "%BUILD_DIR%"
)

REM Create build directory
mkdir "%BUILD_DIR%"
cd /d "%BUILD_DIR%"

REM Configure
echo Configuring CMake...
cmake -G "Visual Studio 17 2022" -A x64 ^
    -DCMAKE_BUILD_TYPE=%CMAKE_BUILD_TYPE% ^
    -DECSCOPE_BUILD_TESTS=ON ^
    -DECSCOPE_BUILD_CROSS_PLATFORM_TESTS=ON ^
    -DECSCOPE_BUILD_GUI=ON ^
    -DECSCOPE_BUILD_EXAMPLES=ON ^
    "%SOURCE_DIR%"

if errorlevel 1 (
    echo Error: CMake configuration failed
    exit /b 1
)

REM Build
echo Building project...
cmake --build . --config %CMAKE_BUILD_TYPE% --parallel

if errorlevel 1 (
    echo Error: Build failed
    exit /b 1
)

REM Run tests
echo Running cross-platform tests...
ctest --build-config %CMAKE_BUILD_TYPE% --parallel --output-on-failure --label-regex "cross-platform"

if errorlevel 1 (
    echo Warning: Some tests failed
    set TEST_FAILED=1
) else (
    echo All tests passed!
)

REM Run additional Windows-specific tests
echo Running Windows-specific tests...
if exist "bin\ecscope_gui_compatibility_test.exe" (
    bin\ecscope_gui_compatibility_test.exe --reporter=junit --out=gui_test_results.xml
)

if exist "bin\ecscope_display_test.exe" (
    bin\ecscope_display_test.exe --dpi-test --json-output > dpi_test_results.json
)

REM Generate report
echo Generating test report...
python "%SOURCE_DIR%\scripts\cross_platform\generate_test_report.py" ^
    --build-dir "%BUILD_DIR%" ^
    --platform windows ^
    --compiler msvc ^
    --build-type %CMAKE_BUILD_TYPE% ^
    --output windows_test_report.json

echo.
echo ========================================
echo Windows Testing Complete
echo ========================================
echo Build Directory: %BUILD_DIR%
echo Test Results: windows_test_report.json
if defined TEST_FAILED (
    echo Status: SOME TESTS FAILED
    exit /b 1
) else (
    echo Status: ALL TESTS PASSED
)

endlocal
